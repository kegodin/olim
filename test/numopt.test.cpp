#include "numopt.hpp"
#include "test.hpp"

#include <cstdio>

using namespace arma;

void test_setdiff() {
  arma::uvec u = {2};
  arma::uvec v = numopt::setdiff(0, 4, u);
  IS_TRUE(v.n_rows == 3);
  IS_TRUE(v(0) == 0);
  IS_TRUE(v(1) == 1);
  IS_TRUE(v(2) == 3);
}

void test_qpez() {
  {
    mat G = {{2, 1}, {1, 2}};
    vec c = {3, 2};
    mat A; A.eye(2, 2);
    vec x = numopt::qpez_schur(G, c, A);
    IS_TRUE(all(abs(x) < 1e-15));
  }
  {
    mat G(2, 2); G.eye(2, 2);
    vec c = {1, 1};
    mat A = {{-1, 1}};
    vec x = numopt::qpez_schur(G, c, A);
    IS_APPROX_EQUAL(x(0), -1.);
    IS_APPROX_EQUAL(x(1), -1.);
  }
  {
    mat G(2, 2); G.eye(2, 2);
    vec c = {-1, -1};
    mat A = {{0, 1}};
    vec x = numopt::qpez_schur(G, c, A);
    IS_APPROX_EQUAL(x(0), 1.);
    IS_APPROX_EQUAL(x(1), 0.);
  }
}

void test_qpi() {
  mat G(2, 2); G.eye(2, 2);
  vec c = {-1./3, -1./3};
  mat A = {{1, 0}, {0, 1}, {-1, -1}};
  vec b = {0, 0, -1};
  vec x, x0 = {1./3, 1./3};
  double tol = EPS(double);
  int niters = 100;
  bool error = false;

  x = numopt::qpi(G, c, A, b, nullptr, &error, tol, niters);
  IS_FALSE(error);
  IS_APPROX_EQUAL(x(0), 1./3);
  IS_APPROX_EQUAL(x(1), 1./3);

  x = numopt::qpi(G, c, A, b, &x0, &error, tol, niters);
  IS_FALSE(error);
  IS_APPROX_EQUAL(x(0), 1./3);
  IS_APPROX_EQUAL(x(1), 1./3);

  c(0) = -1;
  c(1) = -1;
  x = numopt::qpi(G, c, A, b, nullptr, &error, tol, niters);
  IS_FALSE(error);
  IS_APPROX_EQUAL(x(0), 1./2);
  IS_APPROX_EQUAL(x(1), 1./2);

  x = numopt::qpi(G, c, A, b, &x0, &error, tol, niters);
  IS_FALSE(error);
  IS_APPROX_EQUAL(x(0), 1./2);
  IS_APPROX_EQUAL(x(1), 1./2);

  G(0) = 0.013984781373164062;
  G(1) = -0.033870576813323353;
  G(2) = -0.033870576813323353;
  G(3) = 0.28021606112916836;
  c(0) = 0.10047929410060422;
  c(1) = -0.087946136690885759;
  x = numopt::qpi(G, c, A, b, &x0, &error, tol, niters);
  IS_FALSE(error);
  IS_APPROX_EQUAL(x(0), 0.0);
  IS_APPROX_EQUAL(x(1), 0.3138511630507365);
}

void test_sqp() {
  {
    double u0, u1, u2, h, s, s0, s1, s2, theta;
    vec p0(3), p1(3), p2(3);

    auto u = [&] (vec const & x) -> double {
      return (1 - sum(x))*u0 + x(0)*u1 + x(1)*u2;
    };

    auto du = [&] () -> vec {
      return {{u1 - u0, u2 - u0}};
    };

    auto p = [&] (vec const & x) -> vec {
      return (1 - sum(x))*p0 + x(0)*p1 + x(1)*p2;
    };

    auto dP = [&] () -> mat {
      return join_horiz(p1 - p0, p2 - p0);
    };

    auto q = [&] (vec const & x) -> double {
      return dot(p(x), p(x));
    };

    auto l = [&] (vec const & x) -> double {
      return sqrt(q(x));
    };

    auto cprojp = [&] (vec const & x) -> mat {
      return arma::eye(3, 3) - p(x)*p(x).t()/q(x);
    };

    auto sh = [&] () -> double {
      return h*((1 - theta)*s + theta*(s0 + s1 + s2)/3);
    };

    numopt::field_t f = [&] (vec const & x) -> double {
      return u(x) + sh()*l(x);
    };

    numopt::grad_t df = [&] (vec const & x) -> vec {
      return du() + sh()*dP().t()*p(x)/l(x);
    };

    numopt::hess_t d2f = [&] (vec const & x) -> mat {
      return sh()*dP().t()*cprojp(x)*dP()/l(x);
    };

    mat A = {{1, 0}, {0, 1}, {-1, -1}};
    vec b = {0, 0, -1};
    vec x0 = {1./3, 1./3}, xgt(2);
    bool error;
    
    u0 = 0.1233189348351655;
    u1 = 0.1839077882824167;
    u2 = 0.2399525256649028;
    h = 0.4172670690843695;
    s = 0.04965443032574213;
    s0 = 0.9027161099152811;
    s1 = 0.944787189721646;
    s2 = 0.4908640924680799;
    theta = 0.4892526384000189;
    xgt(0) = 5.551115123125783e-17;
    xgt(1) = 0.3114411411773382;
    p0(0) = -0.7981635845641424;
    p0(1) = 1.018685282128575;
    p0(2) = -0.1332174795077347;
    p1(0) = -0.7145301637871584;
    p1(1) = 1.351385768426657;
    p1(2) = -0.2247710560525841;
    p2(0) = -0.5890290307208013;
    p2(1) = -0.2937535977354161;
    p2(2) = -0.8479262436379339;

    /**
     * For the first test, verify that the functions we defined above
     * are correct.
     */
    IS_APPROX_EQUAL(u(x0), 0.182393082927495);
    IS_APPROX_EQUAL(du()(0), 0.06058885344725118);
    IS_APPROX_EQUAL(du()(1), 0.1166335908297372);
    IS_APPROX_EQUAL(p(x0)(0), -0.7005742596907008);
    IS_APPROX_EQUAL(p(x0)(1), 0.6921058176066054);
    IS_APPROX_EQUAL(p(x0)(2), -0.4019715930660842);
    IS_APPROX_EQUAL(dP()(0, 0), 0.08363342077698399);
    IS_APPROX_EQUAL(dP()(1, 0), 0.3327004862980814);
    IS_APPROX_EQUAL(dP()(2, 0), -0.09155357654484941);
    IS_APPROX_EQUAL(dP()(0, 1), 0.2091345538433411);
    IS_APPROX_EQUAL(dP()(1, 1), -1.312438879863992);
    IS_APPROX_EQUAL(dP()(2, 1), -0.7147087641301992);
    IS_APPROX_EQUAL(q(x0), 1.131395917738167);
    IS_APPROX_EQUAL(l(x0), 1.06367096309816);
    IS_APPROX_EQUAL(sh(), 0.1697073884474699);
    {
      mat C = cprojp(x0);
      IS_APPROX_EQUAL(C(0, 0), 0.5661958067496247);
      IS_APPROX_EQUAL(C(1, 0), 0.4285604298155035);
      IS_APPROX_EQUAL(C(2, 0), -0.2489057515709858);
      IS_APPROX_EQUAL(C(0, 1), 0.4285604298155035);
      IS_APPROX_EQUAL(C(1, 1), 0.576619947752222);
      IS_APPROX_EQUAL(C(2, 1), 0.2458970142209899);
      IS_APPROX_EQUAL(C(0, 2), -0.2489057515709858);
      IS_APPROX_EQUAL(C(1, 2), 0.2458970142209899);
      IS_APPROX_EQUAL(C(2, 2), 0.8571842454981533);
    }
    IS_APPROX_EQUAL(f(x0), 0.3629059042422889);
    IS_APPROX_EQUAL(df(x0)(0), 0.09385069562055104);
    IS_APPROX_EQUAL(df(x0)(1), -0.005830975252270845);
    IS_APPROX_EQUAL(d2f(x0)(0, 0), 0.01398478137316401);
    IS_APPROX_EQUAL(d2f(x0)(1, 0), -0.03387057681332327);
    IS_APPROX_EQUAL(d2f(x0)(0, 1), -0.03387057681332326);
    IS_APPROX_EQUAL(d2f(x0)(1, 1), 0.2802160611291685);

    vec x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.6240600881736895;
    u1 = 0.6791355408657477;
    u2 = 0.395515215668593;
    h = 0.3674366485444766;
    s = 0.9879820031616328;
    s0 = 0.03773886623955214;
    s1 = 0.8851680082024753;
    s2 = 0.913286827639239;
    theta = 0.796183873585212;
    xgt(0) = 0.1609665771445731;
    xgt(1) = 0.8390334228554269;
    p0(0) = -1.66416447498706;
    p0(1) = -0.5900345642052215;
    p0(2) = -0.2780641637653093;
    p1(0) = 0.4227156912204783;
    p1(1) = -1.67020069785047;
    p1(2) = 0.4716343264163027;
    p2(0) = -1.212847199674459;
    p2(1) = 0.06619004842461142;
    p2(2) = 0.652355888661374;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.7150370784006941;
    u1 = 0.9037205605563163;
    u2 = 0.8909225043307892;
    h = 0.3341630527374962;
    s = 0.6987458323347945;
    s0 = 0.1978098266859292;
    s1 = 0.03054094630463666;
    s2 = 0.7440742603674624;
    theta = 0.5000224355902009;
    xgt(0) = 4.930380657631324e-32;
    xgt(1) = 0.4886902117153741;
    p0(0) = -0.0549189146094067;
    p0(1) = 0.9111272656538598;
    p0(2) = 0.5945836974090524;
    p1(0) = 0.3502011738745352;
    p1(1) = 1.250251228304996;
    p1(2) = 0.9297894585577157;
    p2(0) = 0.23976325705858;
    p2(1) = -0.6903611031112258;
    p2(2) = -0.651553641750281;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.8865119330761013;
    u1 = 0.0286741524641061;
    u2 = 0.4899013885122239;
    h = 0.1679271456822568;
    s = 0.9786806496411588;
    s0 = 0.7126944716789141;
    s1 = 0.500471624154843;
    s2 = 0.4710883745419393;
    theta = 0.05961886757963919;
    xgt(0) = 1.000000000000001;
    xgt(1) = -8.881784197001252e-16;
    p0(0) = 0.5811723226759228;
    p0(1) = -2.192434919965905;
    p0(2) = -2.319280306643302;
    p1(0) = 0.07993371029843969;
    p1(1) = -0.9484809835705053;
    p1(2) = 0.4114906214233742;
    p2(0) = 0.6769778056840295;
    p2(1) = 0.8577325452053552;
    p2(2) = -0.6911591253829914;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.6596052529083072;
    u1 = 0.5185949425105382;
    u2 = 0.9729745547638625;
    h = 0.6489914927123561;
    s = 0.8003305753524015;
    s0 = 0.4537977087269195;
    s1 = 0.4323915037834617;
    s2 = 0.8253137954020456;
    theta = 0.08346981485891403;
    xgt(0) = 0.5240816876508512;
    xgt(1) = -5.551115123125783e-17;
    p0(0) = -0.5045864055140099;
    p0(1) = -1.27059444980866;
    p0(2) = -0.3825848027076484;
    p1(0) = 0.6486792620486207;
    p1(1) = 0.8257271492417582;
    p1(2) = -1.014943642680137;
    p2(0) = -0.4710699126831666;
    p2(1) = 0.1370248741300503;
    p2(2) = -0.2918633757535734;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.683363243294653;
    u1 = 0.5465931145903228;
    u2 = 0.4257288418711879;
    h = 0.6444427814313365;
    s = 0.6476176301726844;
    s0 = 0.6790167540932019;
    s1 = 0.6357867105140836;
    s2 = 0.9451741131094014;
    theta = 0.2089349224260229;
    xgt(0) = 0.7922088401490383;
    xgt(1) = 0.2077911598509724;
    p0(0) = 0.7595683259147834;
    p0(1) = -0.6572012990983503;
    p0(2) = -0.6039184813761692;
    p1(0) = 0.1769468223294113;
    p1(1) = -0.3075034698627506;
    p1(2) = -0.1318203529158936;
    p2(0) = 0.5953576738841018;
    p2(1) = 1.046832784305232;
    p2(2) = -0.197958632611842;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.6877960851201071;
    u1 = 0.3592282104018606;
    u2 = 0.7363400743012017;
    h = 0.3947074752787632;
    s = 0.6834158669679784;
    s0 = 0.704047430334266;
    s1 = 0.4423054133833708;
    s2 = 0.01957762355331871;
    theta = 0.330857880214071;
    xgt(0) = 0.2848709161846956;
    xgt(1) = 0.2826355402888566;
    p0(0) = -0.2700688126480988;
    p0(1) = -0.4381413556021437;
    p0(2) = -0.4086743147963257;
    p1(0) = 0.9835452352055563;
    p1(1) = -0.297697144009373;
    p1(2) = 1.143678910770958;
    p2(0) = -0.5316201175070693;
    p2(1) = 0.9725657280086532;
    p2(2) = -0.5222504849935489;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.5312092935824387;
    u1 = 0.1088179382730454;
    u2 = 0.6317663735284889;
    h = 0.1264998653293029;
    s = 0.1343033043135746;
    s0 = 0.09859409271099773;
    s1 = 0.1420272484319284;
    s2 = 0.1682512984915278;
    theta = 0.1962489222569553;
    xgt(0) = 0.9999999999999996;
    xgt(1) = -1.4210854715202e-14;
    p0(0) = -0.2856861376018336;
    p0(1) = -0.4624215443537469;
    p0(2) = -0.4097852147401654;
    p1(0) = -0.5035389841318734;
    p1(1) = 1.233297112644135;
    p1(2) = 0.6103052175739498;
    p2(0) = 0.05907215505265444;
    p2(1) = -1.466946730428247;
    p2(2) = -1.625803266396234;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_TRUE(fabs(x(1)) < 1e-12);

    u0 = 0.0773468081126768;
    u1 = 0.9138004107795679;
    u2 = 0.7067152176969306;
    h = 0.5577889667548762;
    s = 0.3134289899365913;
    s0 = 0.1662035629021507;
    s1 = 0.6224972592798952;
    s2 = 0.9879347349524954;
    theta = 0.1704320230568833;
    xgt(0) = 0;
    xgt(1) = 0;
    p0(0) = -0.4493973598602503;
    p0(1) = -0.08429207275342081;
    p0(2) = -1.991997177603269;
    p1(0) = 0.8412456663525811;
    p1(1) = -0.4146589174554855;
    p1(2) = 1.912180838363861;
    p2(0) = -0.3908987322337722;
    p2(1) = 0.4091820825473549;
    p2(2) = -1.142428168121445;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    auto stheta = [&] (vec const & x) -> double {
      return (1 - theta)*s + theta*((1 - sum(x))*s0 + x(0)*s1 + x(1)*s2);
    };

    auto ds = [&] () -> vec {
      return {{s1 - s0, s2 - s0}};
    };

    f = [&] (vec const & x) -> double {
      return u(x) + h*stheta(x)*l(x);
    };

    df = [&] (vec const & x) -> vec {
      return du() + h*(theta*q(x)*ds() + stheta(x)*dP().t()*p(x))/l(x);
    };

    d2f = [&] (vec const & x) -> mat {
      return h*(theta*(dP().t()*p(x)*ds().t() + ds()*p(x).t()*dP()) +
                stheta(x)*dP().t()*cprojp(x)*dP())/l(x);
    };

    u0 = 0.1789824793143351;
    u1 = 0.3389556782477182;
    u2 = 0.210145637043552;
    h = 0.5101525197652502;
    s = 0.9063643232652148;
    s0 = 0.6289239386523179;
    s1 = 0.1015338888123122;
    s2 = 0.3908547527263546;
    theta = 0.05461661522365757;
    xgt(0) = 0.4900915782030914;
    xgt(1) = 0.5099084217969069;
    p0(0) = 0.00490371102195903;
    p0(1) = -0.3020322984463663;
    p0(2) = 1.813582130904333;
    p1(0) = 0.9148517528410741;
    p1(1) = -0.05708071591447714;
    p1(2) = 1.30936207782942;
    p2(0) = -1.044735848409628;
    p2(1) = -0.3482668103352654;
    p2(2) = 1.412561160729294;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.9174938324161169;
    u1 = 0.7135740115943158;
    u2 = 0.61833738362194;
    h = 0.3432878902413454;
    s = 0.9360273266897697;
    s0 = 0.1247740406604926;
    s1 = 0.7305853615057071;
    s2 = 0.6464774324258138;
    theta = 0.833151985669295;
    xgt(0) = 0;
    xgt(1) = 1;
    p0(0) = -0.4258678455717095;
    p0(1) = 0.6361398914029675;
    p0(2) = 0.7931780813895736;
    p1(0) = -0.8983771141007473;
    p1(1) = 0.1562448442775494;
    p1(2) = 1.597253911277571;
    p2(0) = 0.1124397105937409;
    p2(1) = -0.3086249345470284;
    p2(2) = 0.4566596091151506;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.3606365710022027;
    u1 = 0.7565095435019443;
    u2 = 0.4139007486901897;
    h = 0.4923451043849377;
    s = 0.6947432331326101;
    s0 = 0.9727338850797841;
    s1 = 0.3277549604934068;
    s2 = 0.8378031830785756;
    theta = 0.7390722272735281;
    xgt(0) = 0.2323524329366676;
    xgt(1) = 0.7478088220888132;
    p0(0) = 1.648383657046169;
    p0(1) = -2.028361960852765;
    p0(2) = -0.4492568114449102;
    p1(0) = 0.2359932017119493;
    p1(1) = -0.835172963783281;
    p1(2) = -1.275955163408218;
    p2(0) = 0.6170350812805879;
    p2(1) = 0.6127015037072735;
    p2(2) = 0.2893811552948809;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.6604379663126019;
    u1 = 0.04755467311386607;
    u2 = 0.3487848085100589;
    h = 0.4513405803557432;
    s = 0.2409049971201107;
    s0 = 0.7150450132961765;
    s1 = 0.8561822920062879;
    s2 = 0.2815076951185533;
    theta = 0.7310508297237415;
    xgt(0) = 0.7743191696644055;
    xgt(1) = -1.387778780781446e-17;
    p0(0) = -1.034424717234166;
    p0(1) = 1.339554597904117;
    p0(2) = -0.9691403558288297;
    p1(0) = 0.2087156012721984;
    p1(1) = -0.6185933553605473;
    p1(2) = 0.5120156437364544;
    p2(0) = 0.01135417110082006;
    p2(1) = -0.04398862626670082;
    p2(2) = 2.949092541315588;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.3531418129389555;
    u1 = 0.4494435565717483;
    u2 = 0.9635302868434269;
    h = 0.0422977979145428;
    s = 0.9729583341406347;
    s0 = 0.189206843122376;
    s1 = 0.6671203000400749;
    s2 = 0.5864396146789179;
    theta = 0.6751124164051153;
    xgt(0) = 0;
    xgt(1) = 0;
    p0(0) = -0.2788611163878222;
    p0(1) = 0.2451915937240211;
    p0(2) = 1.472513478821577;
    p1(0) = -2.275101542347401;
    p1(1) = -1.633290724921242;
    p1(2) = 0.4154689369787572;
    p2(0) = -0.6547688518580145;
    p2(1) = -0.2963483154065983;
    p2(2) = -1.496918876447554;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));

    u0 = 0.2684388213972831;
    u1 = 0.2578461701126047;
    u2 = 0.3316652387426293;
    h = 0.1522340128629465;
    s = 0.3480076597161135;
    s0 = 0.1216584543077261;
    s1 = 0.8841530577496601;
    s2 = 0.09427839006414607;
    theta = 0.9300406261074891;
    xgt(0) = 0.5156720303795918;
    xgt(1) = -5.551115123125783e-17;
    p0(0) = -0.3744366065079624;
    p0(1) = -1.451740719917382;
    p0(2) = -0.6186818075674646;
    p1(0) = 0.934500962295567;
    p1(1) = 1.055929256492714;
    p1(2) = 0.1602272767486467;
    p2(0) = 0.2874003202431548;
    p2(1) = 0.6329055770412402;
    p2(2) = -1.459041869083612;

    x = numopt::sqp(f, df, d2f, A, b, x0, &error);
    IS_FALSE(error);
    IS_APPROX_EQUAL(x(0), xgt(0));
    IS_APPROX_EQUAL(x(1), xgt(1));
  }
}

int main() {
  test_setdiff();
  test_qpez();
  test_qpi();
  test_sqp();
}
