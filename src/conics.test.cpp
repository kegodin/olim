#include "test.hpp"

#include <cstdio>

#include "conics.hpp"

void intersect_conics_works_1() {
  double P[8], Pgt[] = {
    0.3534158411042917,
    0.2027970328220982,
    0.3132508255623735,
    0.463869633844569,
    0.4804655542612019,
    0.1336538906455123,
    0.186201112405466,
    0.5330127760211535,
  };
  double Q1[6] = {3.955, 3.955, 0.955, -3.955, -1.955, 0.9775};
  double Q2[6] = {0.68, 3.68, 3.68, -1.68, -3.68, 0.84};

  int n;
  intersect_conics(Q1, Q2, P, n);
  IS_TRUE(n == 4);
  for (int i = 0; i < 8; ++i) {
    IS_APPROX_EQUAL(P[i], Pgt[i]);
  }
}

void intersect_conics_works_2() {
  double P[8];
  int n;
  {
    double Q1[] = {-4, -4, -1, 4, 2, -1};
    double Q2[] = {-0.863892, -3.86389, -3.86389, 1.86389, 3.86389, -0.931946};
    double Pgt[] = {
      0.2819503278353713, 0.4360993443292574,
      0.384716183642255, 0.2305676327154899,
      0.2819503278353713, 0.4360993443292574,
      0.384716183642255, 0.2305676327154899,
    };
    intersect_conics(Q1, Q2, P, n);
    IS_TRUE(n == 4);
    for (int i = 0; i < 8; ++i) {
      IS_APPROX_EQUAL(P[i], Pgt[i]);
    }
  }
  {
    double Q1[] = {-3.86389, -3.86389, -0.863892, 3.86389, 1.86389, -0.931946};
    double Q2[] = {-1, -4, -4, 2, 4, -1};
    double Pgt[] = {
      0.2305676327154899, 0.384716183642255,
      0.4360993443292574, 0.2819503278353713,
      0.2305676327154899, 0.384716183642255,
      0.4360993443292574, 0.2819503278353713
    };
    intersect_conics(Q1, Q2, P, n);
    IS_TRUE(n == 4);
    for (int i = 0; i < 8; ++i) {
      IS_APPROX_EQUAL(P[i], Pgt[i]);
    }
  }
  {
    double Q1[] = {-3.86389, -3.86389, -0.863892, 3.86389, 1.86389, -0.931946};
    double Q2[] = {-0.863892, -3.86389, -3.86389, 1.86389, 3.86389, -0.931946};
    double Pgt[] = {
      0.1712914171040692, 0.4953756940073383,
      0.4953756940073381, 0.1712914171040694,
      0.3847161836422552, 0.3847161836422554,
      0.2819503278353711, 0.2819503278353709,
    };
    intersect_conics(Q1, Q2, P, n);
    IS_TRUE(n == 4);
    for (int i = 0; i < 8; ++i) {
      IS_APPROX_EQUAL(P[i], Pgt[i]);
    }
  }
}

int main() {
  intersect_conics_works_1();
  intersect_conics_works_2();
}

// Local Variables:
// indent-tabs-mode: nil
// c-basic-offset: 2
// End:
